openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/ads/home:
    get:
      summary: ''
      operationId: getApiAdsHome
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hvswyunuqfqndenzmwnhpi
                  nullable: false
                phone:
                  type: number
                  description: ''
                  example: 3.3
                  nullable: false
              required:
                - full_name
                - phone
      security: []
  /api/auth/send-otp:
    post:
      summary: ''
      operationId: postApiAuthSendOtp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'The <code>phone</code> of an existing record in the users table.'
                  example: culpa
                  nullable: false
              required:
                - phone
      security: []
  /api/auth/verify-otp:
    post:
      summary: ''
      operationId: postApiAuthVerifyOtp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'The <code>phone</code> of an existing record in the users table.'
                  example: dolorum
                  nullable: false
                otp:
                  type: number
                  description: ''
                  example: 2.366437
                  nullable: false
              required:
                - phone
                - otp
      security: []
  /api/auth/google-redirect:
    post:
      summary: ''
      operationId: postApiAuthGoogleRedirect
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/google-callback:
    post:
      summary: ''
      operationId: postApiAuthGoogleCallback
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/profile-image:
    post:
      summary: ''
      operationId: postApiAuthProfileImage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2024 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
  /api/transfers:
    post:
      summary: ''
      operationId: postApiTransfers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: ''
                  example: ab
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: porro
                  nullable: false
                points:
                  type: integer
                  description: 'Must be at least 1000.'
                  example: 822
                  nullable: false
              required:
                - country
                - phone
                - points
      security: []
  '/api/room/{room_id}/c4/start':
    post:
      summary: ''
      operationId: postApiRoomRoom_idC4Start
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/room/{room_id}/c4/{gameId}/make-move':
    post:
      summary: ''
      operationId: postApiRoomRoom_idC4GameIdMakeMove
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                column:
                  type: integer
                  description: 'Must be at least 0. Must not be greater than 6.'
                  example: 3
                  nullable: false
              required:
                - column
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: gameId
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/messages/rooms/{room_id}':
    post:
      summary: ''
      operationId: postApiMessagesRoomsRoom_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: pzavrdlbqnmbjv
                  nullable: false
              required:
                - message
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
  /api/messages/rooms/active-users:
    get:
      summary: ''
      operationId: getApiMessagesRoomsActiveUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/messages/rooms/rooms/{room_id}':
    get:
      summary: ''
      operationId: getApiMessagesRoomsRoomsRoom_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/room/{room_id}/quiz/start':
    get:
      summary: ''
      operationId: getApiRoomRoom_idQuizStart
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/room/{room_id}/quiz/{quiz_id}/end':
    post:
      summary: ''
      operationId: postApiRoomRoom_idQuizQuiz_idEnd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: quiz_id
        description: 'The ID of the quiz.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/room/{room_id}/quiz/broadcast-answer':
    post:
      summary: ''
      operationId: postApiRoomRoom_idQuizBroadcastAnswer
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/room/{room_id}/quiz/{quiz_id}/question/{question_id}/vote':
    post:
      summary: 'NEW: Spectator endpoint to vote for an answer on a specific question.'
      operationId: nEWSpectatorEndpointToVoteForAnAnswerOnASpecificQuestion
      description: "Each spectator (non-host) can vote once per question per quiz game.\nAfter saving the vote, the updated vote counts for that question are broadcasted realtime."
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: quiz_id
        description: 'The ID of the quiz.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: question_id
        description: 'The ID of the question.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/room/{room_id}/quiz/{quiz_id}/votes':
    get:
      summary: ''
      operationId: getApiRoomRoom_idQuizQuiz_idVotes
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: quiz_id
        description: 'The ID of the quiz.'
        example: 1
        required: true
        schema:
          type: integer
  /api/rooms:
    get:
      summary: ''
      operationId: getApiRooms
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiRooms
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - name
                - image
      security: []
  /api/rooms/me:
    get:
      summary: ''
      operationId: getApiRoomsMe
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/rooms/offline:
    get:
      summary: ''
      operationId: getApiRoomsOffline
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/rooms/{room_id}':
    get:
      summary: ''
      operationId: getApiRoomsRoom_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/rooms/{room_id}/time-purchase':
    post:
      summary: ''
      operationId: postApiRoomsRoom_idTimePurchase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: 1
        required: true
        schema:
          type: integer
  /api/products:
    get:
      summary: ''
      operationId: getApiProducts
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiProducts
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: shjvwzaoze
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Accusantium iusto labore a ea.'
                  nullable: false
                price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 82
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - description
                - price
      security: []
  '/api/products/{product_id}':
    get:
      summary: ''
      operationId: getApiProductsProduct_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiProductsProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kmyzzhvxczrcrjoq
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Quaerat nam reiciendis beatae sed dolorem perferendis.'
                  nullable: true
                price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 67
                  nullable: true
      security: []
    delete:
      summary: ''
      operationId: deleteApiProductsProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 151
        required: true
        schema:
          type: integer
  '/api/product-images/{id}':
    delete:
      summary: ''
      operationId: deleteApiProductImagesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product image.'
        example: est
        required: true
        schema:
          type: string
  /api/product-images/batch:
    delete:
      summary: ''
      operationId: deleteApiProductImagesBatch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  description: 'The <code>id</code> of an existing record in the images table.'
                  example:
                    - 17
                  items:
                    type: integer
      security: []
    post:
      summary: ''
      operationId: postApiProductImagesBatch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the products table.'
                  example: quibusdam
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  items:
                    type: string
                    format: binary
              required:
                - product_id
      security: []
  /api/product-images:
    post:
      summary: ''
      operationId: postApiProductImages
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: false
                product_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the products table.'
                  example: dolor
                  nullable: false
              required:
                - image
                - product_id
      security: []
  /api/product-ratings:
    post:
      summary: 'Store a newly created rating in storage.'
      operationId: storeANewlyCreatedRatingInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the products table.'
                  example: qui
                  nullable: false
                rating:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 5.'
                  example: 5
                  nullable: false
                review:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
              required:
                - product_id
                - rating
      security: []
  '/api/product-ratings/{product_id}':
    get:
      summary: "Display the specified product's ratings."
      operationId: displayTheSpecifiedProductsRatings
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 17
        required: true
        schema:
          type: integer
  '/api/product-ratings/{id}':
    patch:
      summary: 'Update the specified rating in storage.'
      operationId: updateTheSpecifiedRatingInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 5.'
                  example: 3
                  nullable: false
                review:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
      security: []
    delete:
      summary: 'Remove the specified rating from storage.'
      operationId: removeTheSpecifiedRatingFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product rating.'
        example: 14
        required: true
        schema:
          type: integer
  /api/purchase:
    post:
      summary: ''
      operationId: postApiPurchase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the products table.'
                  example: id
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 65
                  nullable: false
              required:
                - product_id
      security: []
  '/api/purchase/{id}/status':
    patch:
      summary: ''
      operationId: patchApiPurchaseIdStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: completed
                  nullable: false
                  enum:
                    - completed
                    - cancelled
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase.'
        example: et
        required: true
        schema:
          type: string
  /api/purchase/store:
    get:
      summary: ''
      operationId: getApiPurchaseStore
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/stores:
    get:
      summary: ''
      operationId: getApiStores
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiStores
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: abtqczpbo
                  nullable: false
                type:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: akehrjfpfgklayrhrof
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: okacudxrg
                  nullable: false
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dbkyyunsmywqoseu
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: jaufxpblbdgixilwux
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - name
                - type
                - country
                - address
                - phone
      security: []
  /api/stores/me:
    get:
      summary: ''
      operationId: getApiStoresMe
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/stores/{store_id}':
    post:
      summary: ''
      operationId: postApiStoresStore_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: slklgqonxniuxldrfpx
                  nullable: true
                type:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tpgobrbyghwipdabmu
                  nullable: true
                country:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tfiffhwzhqhcxmwrielz
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dyjovthlyqdzyivkgr
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: tdok
                  nullable: true
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
      security: []
    get:
      summary: ''
      operationId: getApiStoresStore_id
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: ok
                  data:
                    id: 1
                    name: matjaaaaaaaar
                    type: consequatur
                    country: Anguilla
                    address: '6767 Upton Orchard Suite 737Port Orpha, ND 18441-2630'
                    phone: 802.573.2698
                    image: 'https://cdn.britannica.com/16/204716-050-8BB76BE8/Walmart-store-Mountain-View-California.jpg'
                    points: 134
                    products: []
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: ok
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: matjaaaaaaaar
                      type:
                        type: string
                        example: consequatur
                      country:
                        type: string
                        example: Anguilla
                      address:
                        type: string
                        example: '6767 Upton Orchard Suite 737Port Orpha, ND 18441-2630'
                      phone:
                        type: string
                        example: 802.573.2698
                      image:
                        type: string
                        example: 'https://cdn.britannica.com/16/204716-050-8BB76BE8/Walmart-store-Mountain-View-California.jpg'
                      points:
                        type: integer
                        example: 134
                      products:
                        type: array
                        example: []
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiStoresStore_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
